<div class="chat-container">

  <!-- ✅ LEFT FEATURE SIDEBAR -->
  <aside class="feature-sidebar">
    <div class="feature-group">
      <button class="feature-btn" onclick="toggleTheme()" title="Toggle Theme">
        <i class="fas fa-moon"></i>
      </button>
      <button class="feature-btn" onclick="location.reload()" title="Reload">
        <i class="fas fa-sync-alt"></i>
      </button>
      <button class="feature-btn" onclick="toggleFullscreen()" title="Fullscreen">
        <i class="fas fa-expand"></i>
      </button>
      <button class="feature-btn" onclick="downloadChat()" title="Download Chat">
        <i class="fas fa-download"></i>
      </button>
      <button class="feature-btn" title="Info">
        <i class="fas fa-info-circle"></i>
      </button>
    </div>
    <div class="bottom-group">
      <button class="feature-btn logout-btn" id="logoutBtn" title="Logout">
        <i class="fas fa-sign-out-alt"></i>
      </button>
      <button class="feature-btn settings-btn" title="Settings">
        <i class="fas fa-cog"></i>
      </button>
    </div>
  </aside>


  <!-- ✅ LEFT SIDEBAR -->
  <aside class="sidebar">
    <!-- WhatsApp-style top bar -->
    <div class="sidebar-header">
      <div class="profile-pic"></div>
      <div class="name-container">
        <div class="app-name" style="width: 160px; height: 40px;">
          <svg
            viewBox="0 0 200 50"
            width="160"
            height="40"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            aria-label="Me For You Logo"
            role="img"
            style="overflow: visible;"
          >
            <defs>
              <!-- Simple gradient for text -->
              <linearGradient id="gradWhite" x1="0" y1="0" x2="0" y2="1">
                <stop offset="0%" stop-color="rgb(245,245,245)" />
                <stop offset="100%" stop-color="rgb(200,200,200)" />
              </linearGradient>

              <!-- Drop shadow filter -->
              <filter id="shadow" x="-20%" y="-20%" width="140%" height="140%">
                <feDropShadow dx="2" dy="2" stdDeviation="2" flood-color="#222" flood-opacity="0.6" />
              </filter>
            </defs>

            <!-- Text with shadow and gradient fill -->
            <text
              x="0"
              y="35"
              font-family="'Segoe UI', Tahoma, Geneva, Verdana, sans-serif"
              font-size="36"
              fill="url(#gradWhite)"
              font-weight="700"
              letter-spacing="1"
              filter="url(#shadow)"
            >
              RENATA
            </text>

            <!-- Underline -->
            <line
              x1="0"
              y1="45"
              x2="180"
              y2="45"
              stroke="rgb(180,180,180)"
              stroke-width="3"
              stroke-linecap="round"
              filter="url(#shadow)"
              />
          </svg>
        </div>

        <div class="user-name">
          <%= @user_name %>
        </div>

      </div>
        <div class="sidebar-actions">
        <i class="fas fa-ellipsis-v"></i>
      </div>
    </div>

    <!-- Search -->
    <input type="text" id="conversationSearch" placeholder="Search conversations..." class="search-bar">

    <!-- ✅ Start New Chat button (restored) -->
    <button type="button" class="chat-send" onclick="openNewChatModal()">Start New Chat</button>

    <!-- Conversation List -->
    <div class="conversation-list">
      <% @conversations.each do |convo| %>
        <%= link_to chat_path(id: convo.id), data: { turbo_frame: "chat_frame" }, class: "conversation-item #{'active' if @conversation&.id == convo.id}" do %>
          <div class="avatar"></div>
          <div class="conversation-info">
            <div class="conversation-title">
              <span class="name"><%= convo.name %></span>
              <span class="time">10:45</span>
            </div>
            <div class="last-message"><%= convo.name %>:<%= convo.last_message&.truncate(30) || "No messages yet" %>
            </div>
          </div>
        <% end %>
      <% end %>
    </div>
  </aside>

  <!-- ✅ CHAT AREA -->
  <main class="chat-wrapper">
    <!-- Top Chat Header -->
    <div class="chat-header-bar">
      <div class="avatar"></div>
      <div class="chat-contact-info">
        <span class="chat-name"><%= @conversation&.name || "Select a conversation" %></span>
        <span class="chat-status">online</span>
      </div>
      <div class="chat-actions">
        <i class="fas fa-search"></i>
        <i class="fas fa-paperclip"></i>
        <i class="fas fa-ellipsis-v"></i>
      </div>
    </div>

    <!-- Chat Messages -->
    <turbo-frame id="chat_frame">
      <%= render partial: "chat/chat_exchange", locals: { chats: @chats, conversation: @conversation } %>
    </turbo-frame>
  </main>
</div>

<!-- ✅ Modal -->
<%= render partial: "chat/modal" %>

<!-- ✅ Working JavaScript -->
<script>

    function openNewChatModal() {
        const modal = document.getElementById('newChatModal');
        if (modal) {
            modal.style.display = 'flex';
        }
    }


    function closeNewChatModal() {
        const modal = document.getElementById('newChatModal');
        if (modal) {
            modal.style.display = 'none';
        }
    }

    document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById("conversationSearch");
        const items = document.querySelectorAll(".conversation-item");

        searchInput.addEventListener("input", function () {
            const query = this.value.toLowerCase();
            items.forEach(item => {
                const text = item.textContent.toLowerCase();
                item.style.display = text.includes(query) ? "block" : "none";
            });
        });
    });

    function toggleTheme() {
        document.body.classList.toggle("light-theme");
    }

    function toggleTheme() {
        document.body.classList.toggle("light-theme");
    }

    function toggleFullscreen() {
        if (!document.fullscreenElement) {
            document.documentElement.requestFullscreen();
        } else {
            document.exitFullscreen();
        }
    }

    function downloadChat() {
        const chatContent = document.querySelector('.chat-history')?.innerText || "No chat content available.";
        const blob = new Blob([chatContent], { type: "text/plain" });
        const url = URL.createObjectURL(blob);
        const a = document.createElement("a");
        a.href = url;
        a.download = "chat-history.txt";
        a.click();
        URL.revokeObjectURL(url);
    }

    document.addEventListener("DOMContentLoaded", () => {
        const logoutBtn = document.getElementById("logoutBtn");

        if (logoutBtn) {
            logoutBtn.addEventListener("click", () => {
                const token = document.querySelector('meta[name="csrf-token"]').content;

                fetch("/logout", {
                    method: "DELETE",
                    headers: {
                        "X-CSRF-Token": token,
                        "Content-Type": "application/json",
                        "Accept": "application/json"
                    },
                })
                  .then(response => {
                      if (response.ok) {
                          window.location.href = "/login"; // ✅ Redirect after logout
                      } else {
                          alert("Logout failed.");
                      }
                  })
                  .catch(error => {
                      console.error("Logout error:", error);
                      alert("Something went wrong.");
                  });
            });
        }
    });


</script>
