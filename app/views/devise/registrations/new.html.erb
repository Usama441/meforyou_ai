<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>RENATA - Emotional Support Platform</title>
  <%= csrf_meta_tags %>
</head>
<body>
<header class="header">
  <div class="header-container">
    <div class="logo">
      <div class="logo-icon">R</div>
      <div class="logo-text">RENATA</div>
    </div>

    <nav>
      <ul class="nav-menu">
        <li><a href="#">Home</a></li>
        <li><a href="#">About</a></li>
        <li><a href="#">Services</a></li>
        <li><a href="#">Resources</a></li>
        <li><a href="#">Contact</a></li>
      </ul>
    </nav>

    <div class="header-actions">
      <%= link_to "Login", new_user_session_path, class: "btn-header btn-login" %>
      <%= link_to "Sign Up", new_user_registration_path, class: "btn-header btn-signup" %>
    </div>
  </div>

</header>

<div class="main-content">

<div class="signup-container">
  <div class="ai-badge">RENATA</div>
  <div class="signup-header">
    <h2>Emotional Support Account</h2>
    <p>Your journey to emotional wellbeing starts here</p>
  </div>

  <div class="emotional-support-tagline">
    Creating a safe space for your emotional growth
  </div>

  <div class="step-indicators">
    <div class="step-indicator active" data-step="1">
      <div class="step-node">1</div>
      <div class="step-name">Personal Info</div>
    </div>
    <div class="step-indicator" data-step="2">
      <div class="step-node">2</div>
      <div class="step-name">Profile</div>
    </div>
    <div class="step-indicator" data-step="3">
      <div class="step-node">3</div>
      <div class="step-name">Contact</div>
    </div>
    <div class="step-indicator" data-step="4">
      <div class="step-node">4</div>
      <div class="step-name">Security</div>
    </div>
    <div class="step-indicator" data-step="5">
      <div class="step-node">5</div>
      <div class="step-name">Complete</div>
    </div>
  </div>

  <div class="form-content">
    <%= form_for(resource, as: :user, url: registration_path(:user), html: { id: "signupForm", autocomplete: "off" }) do |f| %>
      <!-- STEP 1: Name -->
      <div class="step step-1 active">
        <div class="form-group">
          <label class="form-label">Full Name</label>
          <div class="form-row double">
            <%= f.text_field :first_name, class: "form-input", placeholder: "First name", required: true, id: "firstName" %>
            <%= f.text_field :last_name,  class: "form-input", placeholder: "Last name",  required: true, id: "lastName" %>
          </div>
          <% if @user.errors[:first_name].present? || @user.errors[:last_name].present? %>
            <div class="error-message">Please enter your full name</div>
          <% end %>
        </div>
      </div>

      <!-- STEP 2: Age & Gender -->
      <div class="step step-2">
        <div class="form-group">
          <label class="form-label">Date of Birth</label>

          <!-- Visible input with your custom calendar -->
          <div class="date-input-container">
            <input type="text" class="form-input" id="dob_display" placeholder="Select your birth date" readonly required>
            <span class="calendar-icon">üìÖ</span>

            <div class="calendar-container" id="calendarContainer">
              <div class="calendar-header">
                <button class="nav-button" id="prevButton" type="button">‚ùÆ</button>
                <div class="month-year" id="monthYear"></div>
                <button class="nav-button" id="nextButton" type="button">‚ùØ</button>
              </div>

              <div class="breadcrumb" id="breadcrumb"></div>
              <div id="calendarView"></div>
              <div class="view-indicator" id="viewIndicator">Click on month/year to change view</div>
            </div>
          </div>

          <!-- Hidden Rails field actually submitted -->
          <%= f.hidden_field :dob, id: "dob_hidden" %>

          <% if @user.errors[:dob].present? %>
            <div class="error-message">Please select your date of birth</div>
          <% end %>
        </div>

        <div class="form-group">
          <label class="form-label">Gender</label>
          <div class="form-row triple">
            <label>
              <%= f.radio_button :gender, "female", required: true %>
              <span>Female</span>
            </label>
            <label>
              <%= f.radio_button :gender, "male", required: true %>
              <span>Male</span>
            </label>
            <label>
              <%= f.radio_button :gender, "other", required: true %>
              <span>Other</span>
            </label>
          </div>
          <% if @user.errors[:gender].present? %>
            <div class="error-message">Please select your gender</div>
          <% end %>
        </div>
      </div>

      <!-- STEP 3: Verification Method -->
      <div class="step step-3">
        <div class="form-group">
          <label class="form-label">Verification Method</label>
          <div class="verification-method">
            <%= f.radio_button :verification_method, "email", checked: true, id: "emailMethod" %>
            <label for="emailMethod">Email</label>

            <%= f.radio_button :verification_method, "phone", id: "phoneMethod" %>
            <label for="phoneMethod">Phone</label>
          </div>
        </div>

        <div class="form-group" id="emailField">
          <label class="form-label">Email Address</label>
          <%= f.email_field :email, class: "form-input", placeholder: "Enter your email", id: "email" %>
          <% if @user.errors[:email].present? %>
            <div class="error-message">Please enter a valid email address</div>
          <% end %>
        </div>

        <div class="form-group" id="phoneField" style="display: none;">
          <label class="form-label">Phone Number</label>
          <div class="form-row double">
            <%= f.select :country_code,
                         options_for_select([["+1 US","+1"],["+44 UK","+44"],["+91 IN","+91"],["+61 AU","+61"],["+81 JP","+81"]], @user.country_code),
                         {}, class: "form-input", id: "countryCode" %>
            <%= f.telephone_field :phone, class: "form-input", placeholder: "Phone number", id: "phone" %>
          </div>
          <% if @user.errors[:phone].present? %>
            <div class="error-message">Please enter a valid phone number</div>
          <% end %>
        </div>
      </div>

      <!-- STEP 4: Password -->
      <div class="step step-4">
        <div class="form-group">
          <label class="form-label">Password</label>
          <%= f.password_field :password, class: "form-input", placeholder: "Create a password", id: "password", required: true, minlength: 8 %>
          <span class="toggle-password-signup">&#128065;</span>
          <div class="password-strength">
            <div class="password-strength-meter" id="strengthMeter"></div>
          </div>
          <% if @user.errors[:password].present? %>
            <div class="error-message">Password must be at least 8 characters</div>
          <% end %>
        </div>

        <div class="form-group">
          <label class="form-label">Confirm Password</label>
          <%= f.password_field :password_confirmation, class: "form-input", placeholder: "Confirm your password", id: "confirmPassword", required: true %>
          <span class="toggle-password-signup-con">&#128065;</span>
          <% if @user.errors[:password_confirmation].present? %>

            <div class="error-message">Passwords do not match</div>
          <% end %>
        </div>
      </div>

      <!-- STEP 5: Security & Terms -->
      <div class="step step-5">
        <div class="form-group">
          <label class="form-label">Human Verification</label>
          <div class="form-group">
            <div class="captcha-container">
              <%= recaptcha_tags %>
            </div>
          </div>
          <% if flash.now[:captcha_error] %>
            <div class="error-message"><%= flash.now[:captcha_error] %></div>
          <% end %>
        </div>

        <div class="checkbox-group">
          <label>
            <%= f.check_box :terms_agree, id: "termsAgree", required: true %>
            <span>I agree to the <%= link_to "Terms of Service", "#" %>, <%= link_to "Privacy Policy", "#" %>, and <%= link_to "Cookie Policy", "#" %></span>
          </label>
          <% if @user.errors[:terms_agree].present? %>
            <div class="error-message">You must agree to the terms</div>
          <% end %>
        </div>
      </div>

      <div class="step-buttons">
        <button type="button" class="btn btn-secondary" id="prevBtn" disabled>Previous</button>
        <button type="button" class="btn btn-primary" id="nextBtn">Next</button>
        <!-- Final actual submit (hidden, click it programmatically on final step) -->
        <%= f.submit "Create Account", class: "btn btn-primary", id: "submitBtn", style: "display:none" %>
      </div>
    <% end %>
  </div>

  <div class="form-footer">
    Already have an account?<%= link_to "Log in", new_user_session_path %>
  </div>
  </div>
</div>

<footer class="app-footer">
  <div class="footer-container">
    <div class="footer-column footer-brand">
      <svg class="footer-name-svg" viewBox="0 0 420 48" xmlns="http://www.w3.org/2000/svg">
        <text x="0" y="34" font-family="Inter, system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial"
              font-weight="800" font-size="32" fill="#7af3ff" letter-spacing="2">
          RENATA
        </text>
      </svg>
      <p class="footer-tagline">Your futuristic AI companion ‚Äî built for real emotions, real responses, and the real you.</p>

      <!-- Social Links Section -->
      <div class="social-section">
        <h4>Connect With Us</h4>
        <div class="social-links">
          <a href="#" class="social-link" aria-label="Facebook">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
              <path d="M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z"/>
            </svg>
          </a>
          <a href="#" class="social-link" aria-label="Twitter">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
              <path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"/>
            </svg>
          </a>
          <a href="#" class="social-link" aria-label="Instagram">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
              <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zM5.838 12a6.162 6.162 0 1 1 12.324 0 6.162 6.162 0 0 1-12.324 0zM12 16a4 4 0 1 1 0-8 4 4 0 0 1 0 8zm4.965-10.405a1.44 1.44 0 1 1 2.881.001 1.44 1.44 0 0 1-2.881-.001z"/>
            </svg>
          </a>
          <a href="#" class="social-link" aria-label="LinkedIn">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
              <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
            </svg>
          </a>
          <a href="#" class="social-link" aria-label="YouTube">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
              <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
            </svg>
          </a>
        </div>
      </div>
    </div>

    <div class="footer-column">
      <h4>Explore</h4>
      <ul class="footer-links">
        <li><%= link_to "Features", features_path %></li>
        <li><%= link_to "Login", login_path %></li>
        <li><%= link_to "Signup", signup_path %></li>
        <li><%= link_to "Pricing", pricing_path %></li>
        <li><%= link_to "API Documentation", api_documentation_path %></li>
        <li><%= link_to "Blog", blog_path %></li>
      </ul>
    </div>

    <div class="footer-column">
      <h4>Support</h4>
      <ul class="footer-links">
        <li><%= link_to "Help Center", help_center_path %></li>
        <li><%= link_to "Community Forum", community_forum_path %></li>
        <li><%= link_to "Contact Us", contact_us_path %></li>
        <li><%= link_to "Feedback", feedback_path %></li>
        <li><%= link_to "System Status", system_status_path %></li>
      </ul>
    </div>

    <div class="footer-column">
      <h4>Company</h4>
      <ul class="footer-links">
        <li><%= link_to "About Us", about_us_path %></li>
        <li><%= link_to "Careers", careers_path %></li>
        <li><%= link_to "Partners", partners_path %></li>
        <li><%= link_to "Press Kit", press_kit_path %></li>
        <li><%= link_to "Newsroom", newsroom_path %></li>
      </ul>
    </div>

    <div class="footer-column">
      <h4>Legal</h4>
      <ul class="footer-links">
        <li><%= link_to "Privacy Policy", privacy_policy_path %></li>
        <li><%= link_to "Terms of Service", terms_of_service_path %></li>
        <li><%= link_to "Cookie Policy", cookie_policy_path %></li>
        <li><%= link_to "Data Processing", data_processing_path %></li>
        <li><%= link_to "Compliance", compliance_path %></li>
        <li><%= link_to "Disclaimer", disclaimer_path %></li>
      </ul>
    </div>
  </div>

  <div class="footer-bottom">
    <div class="footer-bottom-content">
      <div>&copy; 2025 RENATA ‚Äî Built with ‚ù§Ô∏è & intelligence.</div>
    </div>
  </div>
</footer>

<div class="notification" id="notification"><%= notice || alert %></div>
<script>
    /* ------------ Calendar Code ------------- */
    const monthNames = ["January","February","March","April","May","June","July","August","September","October","November","December"];
    const dayNames = ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];

    let currentDate = new Date();
    let selectedDate = null;
    let currentMonth = currentDate.getMonth();
    let currentYear = currentDate.getFullYear();
    let currentView = 'day';
    let yearRangeStart = currentYear - 10;

    const dateInputDisplay = document.getElementById('dob_display');
    const calendarContainer = document.getElementById('calendarContainer');
    const monthYearElement = document.getElementById('monthYear');
    const calendarView = document.getElementById('calendarView');
    const prevButton = document.getElementById('prevButton');
    const nextButton = document.getElementById('nextButton');
    const viewIndicator = document.getElementById('viewIndicator');
    const breadcrumb = document.getElementById('breadcrumb');
    const dobHidden = document.getElementById('dob_hidden');

    renderCalendar();

    dateInputDisplay.addEventListener('click', function(e) {
        e.stopPropagation();
        calendarContainer.classList.toggle('active');
    });
    calendarContainer.addEventListener('click', function(e) { e.stopPropagation(); });
    document.addEventListener('click', function() { calendarContainer.classList.remove('active'); });

    function renderCalendar() {
        calendarView.innerHTML = '';
        switch(currentView) {
            case 'day': renderDayView(); break;
            case 'month': renderMonthView(); break;
            case 'year': renderYearView(); break;
        }
        updateHeader();
        updateBreadcrumb();
    }

    function updateHeader() {
        if (currentView === 'day') { monthYearElement.textContent = `${monthNames[currentMonth]} ${currentYear}`; viewIndicator.textContent = "Click on month/year to change view"; }
        if (currentView === 'month') { monthYearElement.textContent = `${currentYear}`; viewIndicator.textContent = "Click on year to change view, click on month to select"; }
        if (currentView === 'year') { monthYearElement.textContent = `${yearRangeStart} - ${yearRangeStart + 19}`; viewIndicator.textContent = "Click on year to select"; }
    }

    function updateBreadcrumb() {
        breadcrumb.innerHTML = '';
        if (currentView === 'year') return;

        const yearItem = document.createElement('div');
        yearItem.className = 'breadcrumb-item';
        yearItem.textContent = currentYear;
        yearItem.addEventListener('click', function() { currentView = 'year'; renderCalendar(); });
        breadcrumb.appendChild(yearItem);

        if (currentView === 'day') {
            const separator = document.createElement('div');
            separator.className = 'breadcrumb-separator';
            separator.textContent = '>';
            breadcrumb.appendChild(separator);

            const monthItem = document.createElement('div');
            monthItem.className = 'breadcrumb-item';
            monthItem.textContent = monthNames[currentMonth];
            monthItem.addEventListener('click', function() { currentView = 'month'; renderCalendar(); });
            breadcrumb.appendChild(monthItem);
        }
    }

    function renderDayView() {
        const dayHeaders = document.createElement('div');
        dayHeaders.className = 'calendar-grid';
        dayNames.forEach(function(day) {
            const dayHeader = document.createElement('div'); dayHeader.className = 'day-header'; dayHeader.textContent = day;
            dayHeaders.appendChild(dayHeader);
        });
        calendarView.appendChild(dayHeaders);

        const dayGrid = document.createElement('div'); dayGrid.className = 'calendar-grid';
        const firstDay = new Date(currentYear, currentMonth, 1).getDay();
        const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();

        for (let i = 0; i < firstDay; i++) dayGrid.appendChild(document.createElement('div'));

        for (let day = 1; day <= daysInMonth; day++) {
            const dayCell = document.createElement('div');
            dayCell.className = 'day-cell';
            dayCell.textContent = day;

            const today = new Date();
            if (currentYear === today.getFullYear() && currentMonth === today.getMonth() && day === today.getDate()) {
                dayCell.classList.add('today');
            }
            if (selectedDate &&
              currentYear === selectedDate.getFullYear() &&
              currentMonth === selectedDate.getMonth() &&
              day === selectedDate.getDate()) {
                dayCell.classList.add('selected');
            }

            dayCell.addEventListener('click', function() { selectDate(day); });
            dayGrid.appendChild(dayCell);
        }
        calendarView.appendChild(dayGrid);
    }

    function renderMonthView() {
        const monthGrid = document.createElement('div'); monthGrid.className = 'month-grid';
        monthNames.forEach(function(month, index) {
            const monthCell = document.createElement('div');
            monthCell.className = 'month-cell';
            monthCell.textContent = month.substring(0, 3);

            if (currentYear === (new Date()).getFullYear() && index === (new Date()).getMonth()) {
                monthCell.style.fontWeight = 'bold';
            }
            if (selectedDate && currentYear === selectedDate.getFullYear() && index === selectedDate.getMonth()) {
                monthCell.classList.add('selected');
            }
            monthCell.addEventListener('click', function() { currentMonth = index; currentView = 'day'; renderCalendar(); });
            monthGrid.appendChild(monthCell);
        });
        calendarView.appendChild(monthGrid);
    }

    function renderYearView() {
        const yearGrid = document.createElement('div'); yearGrid.className = 'year-grid';
        for (let i = 0; i < 20; i++) {
            const year = yearRangeStart + i;
            const yearCell = document.createElement('div'); yearCell.className = 'year-cell'; yearCell.textContent = year;
            if (year === (new Date()).getFullYear()) yearCell.style.fontWeight = 'bold';
            if (selectedDate && year === selectedDate.getFullYear()) yearCell.classList.add('selected');
            yearCell.addEventListener('click', function() { currentYear = year; currentView = 'month'; renderCalendar(); });
            yearGrid.appendChild(yearCell);
        }
        calendarView.appendChild(yearGrid);
    }

    function selectDate(day) {
        selectedDate = new Date(currentYear, currentMonth, day);
        const options = { year: 'numeric', month: 'long', day: 'numeric' };
        dateInputDisplay.value = selectedDate.toLocaleDateString('en-US', options);
        const iso = selectedDate.toISOString().slice(0,10);
        dobHidden.value = iso;
        calendarContainer.classList.remove('active');
    }

    monthYearElement.addEventListener('click', function() {
        if (currentView === 'day') currentView = 'month';
        else if (currentView === 'month') currentView = 'year';
        renderCalendar();
    });

    prevButton.addEventListener('click', function() {
        switch(currentView) {
            case 'day':
                currentMonth--; if (currentMonth < 0) { currentMonth = 11; currentYear--; } break;
            case 'month':
                currentYear--; break;
            case 'year':
                yearRangeStart -= 20; break;
        }
        renderCalendar();
    });

    nextButton.addEventListener('click', function() {
        switch(currentView) {
            case 'day':
                currentMonth++; if (currentMonth > 11) { currentMonth = 0; currentYear++; } break;
            case 'month':
                currentYear++; break;
            case 'year':
                yearRangeStart += 20; break;
        }
        renderCalendar();
    });

    /* ---- Email/Phone toggle ---- */
    const emailMethod = document.getElementById('emailMethod');
    const phoneMethod = document.getElementById('phoneMethod');
    const emailField = document.getElementById('emailField');
    const phoneField = document.getElementById('phoneField');
    function toggleContact() {
        if (phoneMethod.checked) { phoneField.style.display = ''; emailField.style.display = 'none'; }
        else { emailField.style.display = ''; phoneField.style.display = 'none'; }
    }
    [emailMethod, phoneMethod].forEach(el => el.addEventListener('change', toggleContact));
    toggleContact();

    /* ---- Stepper ---- */
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    const submitBtn = document.getElementById('submitBtn');
    const steps = Array.from(document.querySelectorAll('.step'));
    let stepIndex = steps.findIndex(s => s.classList.contains('active'));

    function showStep(i){
        steps.forEach(s => s.classList.remove('active'));
        steps[i].classList.add('active');
        document.querySelectorAll('.step-indicator').forEach((si,idx)=>{
            si.classList.toggle('active', idx===i);
        });
        prevBtn.disabled = i===0;
        nextBtn.style.display = i===steps.length-1 ? 'none' : '';
        submitBtn.style.display = i===steps.length-1 ? '' : 'none';
    }

    function validateStep(i) {
        let valid = true;
        const currentStep = steps[i];
        const inputs = currentStep.querySelectorAll("input, select, textarea");
        inputs.forEach(input => input.classList.remove("input-error"));

        inputs.forEach(input => {
            if (input.hasAttribute("required") && !input.value.trim()) {
                input.classList.add("input-error");
                valid = false;
            }
            if (input.type === "radio" && input.hasAttribute("required")) {
                const group = currentStep.querySelectorAll(`input[name='${input.name}']`);
                if (![...group].some(r => r.checked)) {
                    valid = false;
                }
            }
        });

        if (i === 3) {
            const pass = document.getElementById("password").value.trim();
            const confirmPass = document.getElementById("confirmPassword").value.trim();
            if (pass !== confirmPass || pass.length < 8) {
                alert("Passwords must match and be at least 8 characters long.");
                valid = false;
            }
        }

        if (i === 4) {
            const captcha = document.getElementById("captchaInput").value.trim();
            if (!captcha) {
                alert("Please solve the captcha.");
                valid = false;
            }
            const terms = document.getElementById("termsAgree");
            if (!terms.checked) {
                alert("You must agree to the terms.");
                valid = false;
            }
        }

        if (!valid) {
            alert("Please fill all required fields before proceeding.");
        }

        return valid;
    }

    prevBtn.addEventListener('click', ()=>{
        stepIndex=Math.max(0, stepIndex-1);
        showStep(stepIndex);
    });

    nextBtn.addEventListener('click', ()=>{
        if (!validateStep(stepIndex)) return;
        stepIndex=Math.min(steps.length-1, stepIndex+1);
        showStep(stepIndex);
    });

    const style = document.createElement("style");
    style.innerHTML = `.input-error { border: 2px solid red !important; }`;
    document.head.appendChild(style);

    showStep(stepIndex);

    /* ---- ‚úÖ Password Strength Meter ---- */
    const passwordInput = document.getElementById('password');
    const strengthBar = document.querySelector('.password-strength-meter');

    if (passwordInput && strengthBar) {
        passwordInput.addEventListener('input', () => {
            const value = passwordInput.value;
            let strength = 0;

            if (value.length >= 6) strength++;
            if (/[A-Z]/.test(value)) strength++;
            if (/[0-9]/.test(value)) strength++;
            if (/[^A-Za-z0-9]/.test(value)) strength++;

            strengthBar.className = 'password-strength-meter';

            if (strength <= 1) {
                strengthBar.classList.add('weak');
            } else if (strength === 2 || strength === 3) {
                strengthBar.classList.add('medium');
            } else if (strength >= 4) {
                strengthBar.classList.add('strong');
            }
        });
    }


</script>


</body>
</html>
