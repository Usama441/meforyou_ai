<main class="signup-container">
  <div class="signup-box">
    <h2>Create a new account</h2>
    <p>It's quick and easy.</p>
    <hr>

    <!-- Step Indicators -->
    <div class="step-indicators">
      <div class="step-indicator active" data-step="1">1</div>
      <div class="step-indicator" data-step="2">2</div>
      <div class="step-indicator" data-step="3">3</div>
      <div class="step-indicator" data-step="4">4</div>
      <div class="step-indicator" data-step="5">5</div>
    </div>

    <%= form_for(resource, as: :user, url: registration_path(:user), html: { autocomplete: "off", class: "step-form" }) do |f| %>
      <%= render 'devise/shared/error_messages', resource: resource %>

      <!-- STEP 1: Name -->
      <div class="step step-1 active">
        <label class="field-label">Full Name:</label>
        <div class="form-row double">
          <%= f.text_field :first_name, placeholder: "First name", class: "form-input", autocomplete: "off" %>
          <%= f.text_field :last_name, placeholder: "Last name", class: "form-input", autocomplete: "off" %>
        </div>
      </div>

      <!-- STEP 2: Age & Gender -->
      <div class="step step-2">
        <label class="field-label">Date of Birth:</label>
        <%= f.date_select :dob, { start_year: 1950, end_year: Date.today.year - 5 }, { class: "form-input dob-select" } %>

        <label class="field-label">Gender:</label>
        <div class="form-row triple gender-options">
          <label><%= f.radio_button :gender, "Female" %><span>Female</span></label>
          <label><%= f.radio_button :gender, "Male" %><span>Male</span></label>
          <label><%= f.radio_button :gender, "Custom" %><span>Other</span></label>
        </div>
      </div>

      <!-- STEP 3: Contact Info -->
      <div class="step step-3">
        <label><input type="radio" name="registration_method" value="email" checked onchange="toggleRegistrationMethod()"> Email</label>
        <label><input type="radio" name="registration_method" value="phone" onchange="toggleRegistrationMethod()"> Phone</label>

        <div id="email_field">
          <label class="field-label">Enter your Email:</label>
          <%= f.email_field :email, placeholder: "Enter email", class: "form-input", autocomplete: "off" %>
        </div>

        <div id="phone_field" style="display: none;">
          <label class="field-label">Select your Country:</label>
          <div class="form-row double">
            <select id="country_code" name="country_code" class="form-input"></select>
            <%= f.text_field :phone, placeholder: "Phone number", class: "form-input" %>
          </div>
        </div>
      </div>

      <!-- STEP 4: Password Setup -->
      <div class="step step-4">
        <label class="field-label">Select your password:</label>
        <%= f.password_field :password, placeholder: "Password", class: "form-input", id: "user_password", autocomplete: "new-password" %>
        <%= f.password_field :password_confirmation, placeholder: "Confirm Password", class: "form-input", id: "user_password_confirmation", autocomplete: "new-password" %>

        <div id="password-strength" style="margin-top: 5px;"></div>
        <button type="button" class="generate-btn" onclick="openPasswordModal()">Generate Secure Password</button>

        <!-- Password Modal -->
        <div id="passwordModal" class="modal" onclick="clickOutsideModal(event)">
          <div class="modal-content">
            <h3>Suggested Password</h3>
            <input type="text" id="suggestedPassword" readonly />
            <div class="modal-buttons">
              <button type="button" onclick="copyPassword()">📋 Copy</button>
              <button type="button" onclick="useSuggestedPassword()">✅ Use</button>
              <button type="button" onclick="generatePassword()">🔁</button>
            </div>
          </div>
        </div>
      </div>

      <!-- STEP 5: Security & Terms -->
      <div class="step step-5">
        <div class="recaptcha-container">
          <div id="g-recaptcha-container"></div>
          <% if flash[:recaptcha_error] %>
            <div class="error-message"><%= flash[:recaptcha_error] %></div>
          <% end %>
        </div>

        <div class="checkbox-group">
          <label>
            <input type="checkbox" id="terms-agree" required>
            <span>I agree to the <a href="#">Terms</a>, <a href="#">Privacy Policy</a>, and <a href="#">Cookies Policy</a>.</span>
          </label>
        </div>
      </div>

      <!-- Step Navigation -->
      <div class="step-buttons">
        <button type="button" id="prevBtn" disabled>Previous</button>
        <button type="button" id="nextBtn">Next</button>
      </div>
    <% end %>

    <p class="form-footer">
      Already have an account? <%= link_to "Log in", new_user_session_path %>
    </p>
  </div>
</main>


<!-- reCAPTCHA script -->
<script src="https://www.google.com/recaptcha/api.js?onload=onRecaptchaLoad&render=explicit" async defer></script>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        // ===== Multi-Step Stepper =====
        const steps = document.querySelectorAll(".step");
        const indicators = document.querySelectorAll(".step-indicator");
        const prevBtn = document.getElementById("prevBtn");
        const nextBtn = document.getElementById("nextBtn");
        let currentStep = 0;
        let recaptchaRendered = false;

        function showStep(index) {
            steps.forEach((step, i) => {
                step.classList.toggle("active", i === index);
                indicators[i].classList.toggle("active", i === index);
                indicators[i].classList.toggle("completed", i < index);
            });

            prevBtn.disabled = index === 0;
            nextBtn.textContent = index === steps.length - 1 ? "Complete" : "Next";

            // Render reCAPTCHA only when its step becomes active
            if (!recaptchaRendered) {
                const recaptchaStep = document.getElementById("g-recaptcha-container");
                if (recaptchaStep && steps[index].contains(recaptchaStep)) {
                    renderRecaptcha();
                    recaptchaRendered = true;
                }
            }
        }

        nextBtn?.addEventListener("click", () => {
            if (currentStep < steps.length - 1) {
                currentStep++;
                showStep(currentStep);
            } else {
                document.querySelector(".step-form")?.submit();
            }
        });

        prevBtn?.addEventListener("click", () => {
            if (currentStep > 0) {
                currentStep--;
                showStep(currentStep);
            }
        });

        showStep(currentStep);

        // ===== Email / Phone Toggle =====
        window.toggleRegistrationMethod = function () {
            const method = document.querySelector('input[name="registration_method"]:checked')?.value;
            document.getElementById("email_field").style.display = method === "email" ? "block" : "none";
            document.getElementById("phone_field").style.display = method === "phone" ? "block" : "none";
        };
        toggleRegistrationMethod();

        // ===== reCAPTCHA Explicit Render =====
        function renderRecaptcha() {
            const container = document.getElementById("g-recaptcha-container");
            if (container && typeof grecaptcha !== "undefined") {
                grecaptcha.render(container, {
                    sitekey: "<%= Rails.application.credentials.dig(:recaptcha, :site_key) || ENV['RECAPTCHA_SITE_KEY'] %>",
                    callback: onRecaptchaVerified,
                    "expired-callback": onRecaptchaExpired,
                    theme: "light"
                });
                console.log("reCAPTCHA rendered successfully");
            } else {
                console.error("reCAPTCHA container not found or grecaptcha not loaded yet!");
            }
        }

        window.onRecaptchaVerified = function (token) {
            console.log("reCAPTCHA verified:", token);
        };

        window.onRecaptchaExpired = function () {
            console.warn("reCAPTCHA expired");
        };

        // Onload hook from Google script
        window.onRecaptchaLoad = function () {
            console.log("Google reCAPTCHA API loaded");
            // If first step already contains reCAPTCHA, render immediately
            if (steps[currentStep].contains(document.getElementById("g-recaptcha-container"))) {
                renderRecaptcha();
                recaptchaRendered = true;
            }
        };
    });

    document.addEventListener("DOMContentLoaded", () => {
        const countries = [ { name: "Afghanistan", dial: "+93", flag: "🇦🇫" },
            { name: "Albania", dial: "+355", flag: "🇦🇱" },
            { name: "Algeria", dial: "+213", flag: "🇩🇿" },
            { name: "Andorra", dial: "+376", flag: "🇦🇩" },
            { name: "Angola", dial: "+244", flag: "🇦🇴" },
            { name: "Antigua and Barbuda", dial: "+1‑268", flag: "🇦🇬" },
            { name: "Argentina", dial: "+54", flag: "🇦🇷" },
            { name: "Armenia", dial: "+374", flag: "🇦🇲" },
            { name: "Australia", dial: "+61", flag: "🇦🇺" },
            { name: "Austria", dial: "+43", flag: "🇦🇹" },
            { name: "Azerbaijan", dial: "+994", flag: "🇦🇿" },
            { name: "Bahamas", dial: "+1‑242", flag: "🇧🇸" },
            { name: "Bahrain", dial: "+973", flag: "🇧🇭" },
            { name: "Bangladesh", dial: "+880", flag: "🇧🇩" },
            { name: "Barbados", dial: "+1‑246", flag: "🇧🇧" },
            { name: "Belarus", dial: "+375", flag: "🇧🇾" },
            { name: "Belgium", dial: "+32", flag: "🇧🇪" },
            { name: "Belize", dial: "+501", flag: "🇧🇿" },
            { name: "Benin", dial: "+229", flag: "🇧🇯" },
            { name: "Bhutan", dial: "+975", flag: "🇧🇹" },
            { name: "Bolivia", dial: "+591", flag: "🇧🇴" },
            { name: "Bosnia and Herzegovina", dial: "+387", flag: "🇧🇦" },
            { name: "Botswana", dial: "+267", flag: "🇧🇼" },
            { name: "Brazil", dial: "+55", flag: "🇧🇷" },
            { name: "Brunei", dial: "+673", flag: "🇧🇳" },
            { name: "Bulgaria", dial: "+359", flag: "🇧🇬" },
            { name: "Burkina Faso", dial: "+226", flag: "🇧🇫" },
            { name: "Burundi", dial: "+257", flag: "🇧🇮" },
            { name: "Cambodia", dial: "+855", flag: "🇰🇭" },
            { name: "Cameroon", dial: "+237", flag: "🇨🇲" },
            { name: "Canada", dial: "+1", flag: "🇨🇦" },
            { name: "Cape Verde", dial: "+238", flag: "🇨🇻" },
            { name: "Central African Republic", dial: "+236", flag: "🇨🇫" },
            { name: "Chad", dial: "+235", flag: "🇹🇩" },
            { name: "Chile", dial: "+56", flag: "🇨🇱" },
            { name: "China", dial: "+86", flag: "🇨🇳" },
            { name: "Colombia", dial: "+57", flag: "🇨🇴" },
            { name: "Comoros", dial: "+269", flag: "🇰🇲" },
            { name: "Congo (Brazzaville)", dial: "+242", flag: "🇨🇬" },
            { name: "Congo (Kinshasa)", dial: "+243", flag: "🇨🇩" },
            { name: "Costa Rica", dial: "+506", flag: "🇨🇷" },
            { name: "Croatia", dial: "+385", flag: "🇭🇷" },
            { name: "Cuba", dial: "+53", flag: "🇨🇺" },
            { name: "Cyprus", dial: "+357", flag: "🇨🇾" },
            { name: "Czech Republic", dial: "+420", flag: "🇨🇿" },
            { name: "Denmark", dial: "+45", flag: "🇩🇰" },
            { name: "Djibouti", dial: "+253", flag: "🇩🇯" },
            { name: "Dominica", dial: "+1‑767", flag: "🇩🇲" },
            { name: "Dominican Republic", dial: "+1‑809", flag: "🇩🇴" },
            { name: "Ecuador", dial: "+593", flag: "🇪🇨" },
            { name: "Egypt", dial: "+20", flag: "🇪🇬" },
            { name: "El Salvador", dial: "+503", flag: "🇸🇻" },
            { name: "Equatorial Guinea", dial: "+240", flag: "🇬🇶" },
            { name: "Eritrea", dial: "+291", flag: "🇪🇷" },
            { name: "Estonia", dial: "+372", flag: "🇪🇪" },
            { name: "Eswatini", dial: "+268", flag: "🇸🇿" },
            { name: "Ethiopia", dial: "+251", flag: "🇪🇹" },
            { name: "Fiji", dial: "+679", flag: "🇫🇯" },
            { name: "Finland", dial: "+358", flag: "🇫🇮" },
            { name: "France", dial: "+33", flag: "🇫🇷" },
            { name: "Gabon", dial: "+241", flag: "🇬🇦" },
            { name: "Gambia", dial: "+220", flag: "🇬🇲" },
            { name: "Georgia", dial: "+995", flag: "🇬🇪" },
            { name: "Germany", dial: "+49", flag: "🇩🇪" },
            { name: "Ghana", dial: "+233", flag: "🇬🇭" },
            { name: "Greece", dial: "+30", flag: "🇬🇷" },
            { name: "Grenada", dial: "+1‑473", flag: "🇬🇩" },
            { name: "Guatemala", dial: "+502", flag: "🇬🇹" },
            { name: "Guinea", dial: "+224", flag: "🇬🇳" },
            { name: "Guinea‑Bissau", dial: "+245", flag: "🇬🇼" },
            { name: "Guyana", dial: "+592", flag: "🇬🇾" },
            { name: "Haiti", dial: "+509", flag: "🇭🇹" },
            { name: "Honduras", dial: "+504", flag: "🇭🇳" },
            { name: "Hungary", dial: "+36", flag: "🇭🇺" },
            { name: "Iceland", dial: "+354", flag: "🇮🇸" },
            { name: "India", dial: "+91", flag: "🇮🇳" },
            { name: "Indonesia", dial: "+62", flag: "🇮🇩" },
            { name: "Iran", dial: "+98", flag: "🇮🇷" },
            { name: "Iraq", dial: "+964", flag: "🇮🇶" },
            { name: "Ireland", dial: "+353", flag: "🇮🇪" },
            { name: "Israel", dial: "+972", flag: "🇮🇱" },
            { name: "Italy", dial: "+39", flag: "🇮🇹" },
            { name: "Ivory Coast", dial: "+225", flag: "🇨🇮" },
            { name: "Jamaica", dial: "+1‑876", flag: "🇯🇲" },
            { name: "Japan", dial: "+81", flag: "🇯🇵" },
            { name: "Jordan", dial: "+962", flag: "🇯🇴" },
            { name: "Kazakhstan", dial: "+7", flag: "🇰🇿" },
            { name: "Kenya", dial: "+254", flag: "🇰🇪" },
            { name: "Kiribati", dial: "+686", flag: "🇰🇮" },
            { name: "Kuwait", dial: "+965", flag: "🇰🇼" },
            { name: "Kyrgyzstan", dial: "+996", flag: "🇰🇬" },
            { name: "Laos", dial: "+856", flag: "🇱🇦" },
            { name: "Latvia", dial: "+371", flag: "🇱🇻" },
            { name: "Lebanon", dial: "+961", flag: "🇱🇧" },
            { name: "Lesotho", dial: "+266", flag: "🇱🇸" },
            { name: "Liberia", dial: "+231", flag: "🇱🇷" },
            { name: "Libya", dial: "+218", flag: "🇱🇾" },
            { name: "Liechtenstein", dial: "+423", flag: "🇱🇮" },
            { name: "Lithuania", dial: "+370", flag: "🇱🇹" },
            { name: "Luxembourg", dial: "+352", flag: "🇱🇺" },
            { name: "Madagascar", dial: "+261", flag: "🇲🇬" },
            { name: "Malawi", dial: "+265", flag: "🇲🇼" },
            { name: "Malaysia", dial: "+60", flag: "🇲🇾" },
            { name: "Maldives", dial: "+960", flag: "🇲🇻" },
            {name: "Mali", dial: "+223", flag: "🇲🇱 "},
            {name: "Malta", dial: "+356", flag: "🇲🇹"},
            {name: "Marshall Islands", dial: "+692", flag: "🇲🇭"},
            {name: "Mauritania", dial: "+222", flag: "🇲🇷"},
            {name: "Mauritius", dial: "+230", flag: "🇲🇺"},
            {name: "Mexico", dial: "+52", flag: "🇲🇽"},
            {name: "Micronesia", dial: "+691", flag: "🇫🇲"},
            {name: "Moldova", dial: "+373", flag: "🇲🇩"},
            {name: "Monaco", dial: "+377", flag: "🇲🇨"},
            {name: "Mongolia", dial: "+976", flag: "🇲🇳"},
            {name: "Montenegro", dial: "+382", flag: "🇲🇪"},
            {name: "Morocco", dial: "+212", flag: "🇲🇦"},
            {name: "Mozambique", dial: "+258", flag: "🇲🇿"},
            {name: "Myanmar", dial: "+95", flag: "🇲🇲"},
            {name: "Namibia", dial: "+264", flag: "🇳🇦"},
            {name: "Nauru", dial: "+674", flag: "🇳🇷"},
            {name: "Nepal", dial: "+977", flag: "🇳🇵"},
            {name: "Netherlands", dial: "+31", flag: "🇳🇱"},
            {name: "New Zealand", dial: "+64", flag: "🇳🇿"},
            {name: "Nicaragua", dial: "+505", flag: "🇳🇮"},
            {name: "Niger", dial: "+227", flag: "🇳🇪"},
            {name: "Nigeria", dial: "+234", flag: "🇳🇬"},
            {name: "North Korea", dial: "+850", flag: "🇰🇵"},
            {name: "North Macedonia", dial: "+389", flag: "🇲🇰"},
            {name: "Norway", dial: "+47", flag: "🇳🇴"},
            {name: "Oman", dial: "+968", flag: "🇴🇲"},
            {name: "Pakistan", dial: "+92", flag: "🇵🇰"},
            {name: "Palau", dial: "+680", flag: "🇵🇼"},
            {name: "Palestine", dial: "+970", flag: "🇵🇸"},
            {name: "Panama", dial: "+507", flag: "🇵🇦"},
            {name: "Papua New Guinea ", dial: "+675", flag: "🇵🇬"},
            {name: "Paraguay", dial: "+595", flag: "🇵🇾"},
            {name: "Peru", dial: "+51", flag: "🇵🇪"},
            {name: "Philippines", dial: "+63", flag: "🇵🇭"},
            {name: "Poland", dial: "+48", flag: "🇵🇱"},
            {name: "Portugal", dial: "+351", flag: "🇵🇹"},
            {name: "Qatar", dial: "+974", flag: "🇶🇦"},
            {name: "Romania", dial: "+40", flag: "🇷🇴"},
            {name: "Russia", dial: "+7", flag: "🇷🇺"},
            {name: "Rwanda", dial: "+250", flag: "🇷🇼"},
            {name: "Saint Kitts and Nevis", dial: "+1-869", flag: "🇰🇳"},
            {name: "Saint Lucia", dial: "+1-758", flag: "🇱🇨"},
            {name: "Saint Vincent and the Grenadines", dial: "+1-784", flag: "🇻🇨"},
            {name: "Samoa", dial: "+685", flag: "🇼🇸"},
            {name: "San Marino", dial: "+378", flag: "🇸🇲"},
            {name: "Sao Tome and Principe", dial: "+239", flag: "🇸🇹"},
            {name: "Saudi Arabia", dial: "+966", flag: "🇸🇦"},
            {name: "Senegal", dial: "+221", flag: "🇸🇳"},
            {name: "Serbia", dial: "+381", flag: "🇷🇸"},
            {name: "Seychelles", dial: "+248", flag: "🇸🇨"},
            {name: "Sierra Leone", dial: "+232", flag: "🇸🇱"},
            {name: "Singapore", dial: "+65", flag: "🇸🇬"},
            {name: "Slovakia", dial: "+421", flag: "🇸🇰"},
            {name: "Slovenia", dial: "+386", flag: "🇸🇮"},
            {name: "Solomon Islands", dial: "+677", flag: "🇸🇧"},
            {name: "Somalia", dial: "+252", flag: "🇸🇴"},
            {name: "South Africa", dial: "+27", flag: "🇿🇦"},
            {name: "South Korea", dial: "+82", flag: "🇰🇷"},
            {name: "South Sudan", dial: "+211", flag: "🇸🇸"},
            {name: "Spain", dial: "+34", flag: "🇪🇸"},
            {name: "Sri Lanka", dial: "+94", flag: "🇱🇰"},
            {name: "Sudan", dial: "+249", flag: "🇸🇩"},
            {name: "Suriname", dial: "+597", flag: "🇸🇷"},
            {name: "Sweden", dial: "+46", flag: "🇸🇪"},
            {name: "Switzerland", dial: "+41", flag: "🇨🇭"},
            {name: "Syria", dial: "+963", flag: "🇸🇾"},
            {name: "Taiwan", dial: "+886", flag: "🇹🇼"},
            {name: "Tajikistan", dial: "+992", flag: "🇹🇯"},
            {name: "Tanzania", dial: "+255", flag: "🇹🇿"},
            {name: "Thailand", dial: "+66", flag: "🇹🇭"},
            {name: "Timor-Leste", dial: "+670", flag: "🇹🇱"},
            {name: "Togo", dial: "+228", flag: "🇹🇬"},
            {name: "Tonga", dial: "+676", flag: "🇹🇴"},
            {name: "Trinidad and Tobago", dial: "+1-868", flag: "🇹🇹"},
            {name: "Tunisia", dial: "+216", flag: "🇹🇳"},
            {name: "Turkey", dial: "+90", flag: "🇹🇷"},
            {name: "Turkmenistan", dial: "+993", flag: "🇹🇲"},
            {name: "Tuvalu", dial: "+688", flag: "🇹🇻"},
            {name: "Uganda", dial: "+256", flag: "🇺🇬"},
            {name: "Ukraine", dial: "+380", flag: "🇺🇦"},
            {name: "United Arab Emirates", dial: "+971", flag: "🇦🇪"},
            {name: "United Kingdom", dial: "+44", flag: "🇬🇧"},
            {name: "United States", dial: "+1", flag: "🇺🇸"},
            {name: "Uruguay", dial: "+598", flag: "🇺🇾"},
            {name: "Uzbekistan", dial: "+998", flag: "🇺🇿"},
            {name: "Vanuatu", dial: "+678", flag: "🇻🇺"},
            {name: "Vatican City", dial: "+379", flag: "🇻🇦"},
            {name: "Venezuela", dial: "+58", flag: "🇻🇪"},
            {name: "Vietnam", dial: "+84", flag: "🇻🇳"},
            {name: "Yemen", dial: "+967", flag: "🇾🇪"},
            {name: "Zambia", dial: "+260", flag: "🇿🇲"},
            {name: "Zimbabwe", dial: "+263", flag: "🇿🇼"}
        ];
        countries.sort((a, b) => a.name.localeCompare(b.name));
        const select = document.getElementById("country_code");
        if (select) {
            countries.forEach(c => {
                const option = document.createElement("option");
                option.value = c.dial;
                option.textContent = `${c.flag} ${c.dial} (${c.name})`;
                if (c.name === "Pakistan") option.selected = true;
                select.appendChild(option);
            });
        }
    });

</script>
